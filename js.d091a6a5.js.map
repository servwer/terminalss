{"version":3,"sources":["../src/preact.js","../src/vnode.js","../src/options.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/vdom/component.js","../src/component.js","../src/render.js","js/components/Rules.js","../node_modules/format-number/index.js","js/components/Helpers.js","js/components/Rates.js","js/components/Bet.js","js/components/Line.js","js/components/Loader.js","js/components/TextRules.js","js/components/Popup.js","js/transport.js","js/components/Main.js","js/components/App.js","js/index.js"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","applyRef","ref","value","current","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","NO_RENDER","SYNC_RENDER","FORCE_RENDER","ASYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","node","_componentConstructor","isNamedNode","normalizedNodeName","defaultProps","document","createElementNS","removeNode","parentNode","setAccessor","old","name","style","innerHTML","__html","useCapture","_listeners","removeChild","ns","eventProxy","mounts","diffLevel","hydrating","flushMounts","c","shift","ret","parent","componentRoot","prevSvgMode","ATTR_KEY","out","buildComponentFromVNode","vnodeName","dom","firstChild","appendChild","nodeValue","vchildren","context","mountAll","originalChildren","keyed","min","len","childrenLen","vlen","j","f","vchild","keyedLen","component","unmountOnly","next","previousSibling","diffAttributes","attrs","recyclerComponents","createComponent","Ctor","prototype","constructor","nextBase","doRender","setComponentProps","_disable","componentWillReceiveProps","prevContext","renderMode","syncComponentUpdates","previousProps","previousState","__ref","renderComponent","state","isUpdate","base","initialBase","snapshot","rendered","inst","cbase","shouldComponentUpdate","prevProps","_dirty","render","getSnapshotBeforeUpdate","childComponent","childProps","getNodeProps","initialChildComponent","baseParent","replaceChild","_component","toUnmount","componentRef","t","afterUpdate","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","beforeUnmount","componentWillUnmount","callback","diff","merge","createRef","Rules","isStartType","type","sum","allSums","onClickShowPopup","formatNumber","number","toString","replace","betFormatNumber","negativeLeftOut","integerSeparator","truncate","decimal","padRight","Rates","tourNumber","leaders","user","maxListCount","formattedLeaders","map","index","lastNameFirstChar","position","dataGroups","Array","isArray","userInfoPositionInDataGroups","userPosition","userPositionOutOfTable","score","group","groupIndex","cardNumbers","pointsCount","cardNumber","Bet","Component","date","Date","bet","betDate","formattedDate","toLocaleDateString","year","month","day","formattedTime","toLocaleString","hour","minute","isNonOrdinar","toLowerCase","isOrdinar","isSystem","isExpress","outcomesLength","betEvents","isOpen","onClickOpenBody","eventTitle","setState","points","betSumm","betId","totalFactor","event","Line","bets","Loader","TextRules","Popup","e","target","classList","contains","closest","onClose","Transport","url","authToken","baseURL","headers","Headers","params","mode","setHeader","set","request","method","path","console","error","startsWith","config","response","fetch","ok","result","json","status","statusText","requestRatings","campaignId","requestLeaders","ratingId","requestCurrentUser","setAuthToken","requestClientBets","requestActions","externalId","channelTypeId","Accept","_parseJwt","token","base64Url","base64","split","jsonPayload","decodeURIComponent","atob","charCodeAt","join","JSON","parse","_getClientNumberFromToken","decoded","sub","logger","_uuidv4","r","Math","random","v","getUserInfo","App","markaURL","userCard","currentRating","prevRating","transport","isRequestUser","isVip","isSettingsReceived","isAuth","activeTab","isPopupOpen","tour","isVIP","sendMessageToParent","onSwitchTab","dataset","updateActionData","getCurrentRating","Error","ratingIndex","findIndex","item","rating","id","getLeaders","prevLeaders","prevError","concatPrevAndCurrentLeaders","currentLeaders","prevLeadersWithResetScores","prevLeader","isContainsInCurrentLeaders","find","leader","clientNumber","filter","message","getBets","getUser","clientNumbers","formattedUser","data","stringify","window","postMessage","nextProps","componentDidMount","headerClass","onClick","campaignResId","campaignResIdVIP","onParentMessage","onClickBack","setSettings","settings","Object","keys","forEach","setInitialSettings","getActions","vipStatus","campaignsMeta","campaignIdVIP","origin","location","onClickChangeType","addEventListener","removeEventListener","NavStart","NavVIP","getElementById","lastChild"],"mappings":"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","file":"js.d091a6a5.js","sourceRoot":"../src","sourcesContent":["import { h, h as createElement } from './h';\nimport { cloneElement } from './clone-element';\nimport { Component } from './component';\nimport { render } from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nfunction createRef() {\n\treturn {};\n}\n\nexport default {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n\nexport {\n\th,\n\tcreateElement,\n\tcloneElement,\n\tcreateRef,\n\tComponent,\n\trender,\n\trerender,\n\toptions\n};\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","import { extend } from './util';\nimport { h } from './h';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./vnode').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./vnode').VNode>} [rest] Any additional arguments will be used as replacement\n *  children.\n */\nexport function cloneElement(vnode, props) {\n\treturn h(\n\t\tvnode.nodeName,\n\t\textend(extend({}, vnode.attributes), props),\n\t\targuments.length>2 ? [].slice.call(arguments, 2) : vnode.children\n\t);\n}\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n","import { diff } from './vdom/diff';\n\n/**\n * Render JSX into a `parent` Element.\n * @param {import('./vnode').VNode} vnode A (JSX) VNode to render\n * @param {import('./dom').PreactElement} parent DOM element to render into\n * @param {import('./dom').PreactElement} [merge] Attempt to re-use an existing DOM tree rooted at\n *  `merge`\n * @public\n *\n * @example\n * // render a div into <body>:\n * render(<div id=\"hello\">hello!</div>, document.body);\n *\n * @example\n * // render a \"Thing\" component into #foo:\n * const Thing = ({ name }) => <span>{ name }</span>;\n * render(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent, false);\n}\n","import { h } from 'preact'\n\nconst Rules = ({ ...props }) => {\n    const isStartType = props.type === 'start';\n    const sum = isStartType ? ' 500' : ' 3 000';\n    const allSums = isStartType ? (\n        <div class='prize'>\n            <div class={`prize__item prize__item_${props.type}`} data-num='1'>\n                <span class={`prize__name heading heading_${props.type}`}>тур</span>\n                <ul class='prize__list colored-list'>\n                    <li class='prize__list-item'><span>1 место – 50 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>2 место – 40 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>3 место – 30 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>4 место – 25 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>5 место – 20 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>6 место – 15 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>7 место – 15 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>8-10 место – 10 000 &#8381;</span></li>\n                    <div class='prize__list-anno'><span>фрибетами</span></div>\n                </ul>\n            </div>\n            <div class={`prize__item prize__item_${props.type}`} data-num='2'>\n                <span class={`prize__name heading heading_${props.type}`}>тур</span>\n                <ul class='prize__list colored-list'>\n                    <li class='prize__list-item'><span>1 место – 50 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>2 место – 40 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>3 место – 30 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>4 место – 25 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>5 место – 20 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>6 место – 15 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>7 место – 15 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>8-10 место – 10 000 &#8381;</span></li>\n                    <div class='prize__list-anno'><span>фрибетами</span></div>\n                </ul>\n            </div>\n            <div class={`prize__item prize__item_${props.type}`} data-num='3'>\n                <span class={`prize__name heading heading_${props.type}`}>тур</span>\n                <ul class='prize__list colored-list'>\n                    <li class='prize__list-item'><span>1 место – <em>300 000</em> &#8381;</span></li>\n                    <div class='prize__list-anno prize__list-anno_last'><span>деньгами</span></div>\n                    <li class='prize__list-item'><span>2 место – 200 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>3 место – 125 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>4 место – 75 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>5 место – 50 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>6 место – 40 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>7 место – 30 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>8-10 место – 25 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>11 место – 20 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>12 место – 20 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>13-19 место – 15 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>20 место – 10 000 &#8381;</span></li>\n                    <div class='prize__list-anno prize__list-anno_last'><span>фрибетами</span></div>\n                </ul>\n            </div>\n        </div>\n    ) : (\n        <div class='prize'>\n            <div class={`prize__item prize__item_${props.type}`} data-num='1'>\n                <span class={`prize__name heading heading_${props.type}`}>тур</span>\n                <ul class='prize__list colored-list'>\n                    <li class='prize__list-item'><span>1 место – 200 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>2 место – 100 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>3 место – 50 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>4 место – 25 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>5 место – 25 000 &#8381;</span></li>\n                    <div class='prize__list-anno'><span>фрибетами</span></div>\n                </ul>\n            </div>\n            <div class={`prize__item prize__item_${props.type}`} data-num='2'>\n                <span class={`prize__name heading heading_${props.type}`}>тур</span>\n                <ul class='prize__list colored-list'>\n                    <li class='prize__list-item'><span>1 место – 200 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>2 место – 100 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>3 место – 75 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>4 место – 50 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>5 место – 25 000 &#8381;</span></li>\n                    <div class='prize__list-anno'><span>фрибетами</span></div>\n                </ul>\n            </div>\n            <div class={`prize__item prize__item_${props.type}`} data-num='3'>\n                <span class={`prize__name heading heading_${props.type}`}>тур</span>\n                <ul class='prize__list colored-list'>\n                    <li class='prize__list-item'><span>1 место – <em>500 000</em> &#8381;</span></li>\n                    <li class='prize__list-item'><span>2 место – 250 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>3 место – 100 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>4 место – 75 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>5 место – 50 000 &#8381;</span></li>\n                    <li class='prize__list-item'><span>6-10 место – 25 000 &#8381;</span></li>\n                    <div class='prize__list-anno prize__list-anno_last'><span>деньгами</span></div>\n                </ul>\n            </div>\n        </div>\n    );\n\n    return (\n        <div class='rules'>\n            <h4 class={`rules__header heading heading_${props.type}`}>призовой фонд</h4>\n            {allSums}\n            <h4 class={`rules__header heading heading_${props.type}`}>механика акции</h4>\n            <ul class='icon-list'>\n                <li class='icon-list__item'>Сумма одного пари для участия в акции – <em>от {sum} </em>&nbsp;рублей</li>\n                <li class='icon-list__item'>Общий коэффициент пари – <em>от 1,50</em></li>\n                <li class='icon-list__item'>\n                    <div>\n                        Количество очков = (сумма пари / {sum}) х общий коэффициент пари, <br />\n                        <span>где коэффициент округляется до целого числа в меньшую сторону и не может превышать 7,00 при расчёте</span>\n                    </div>\n                </li>\n            </ul>\n            <div class='rules__tour'>\n                <h4 class={`rules__tour-heading heading heading_${props.type}`}>\n                    <span>1</span> тур &nbsp;<em>(с 1 по 10 число каждого месяца)</em>\n                </h4>\n                <ul class='rules__tour-list colored-list'>\n                    <li><span>В первом туре принимают участие Гости БК «Лига Ставок», заключающие пари в клубах БК «Лига Ставок», перечисленных в пункте 3 полных условий акции. </span></li>\n                    <li><span>Участники первого тура, занявшие первые 100 мест в рейтинге, т.е. набравшие максимальное количество очков по итогам тура, переходят во второй тур акции.</span></li>\n                </ul>\n            </div>\n            <div class='rules__tour'>\n                <h4 class={`rules__tour-heading heading heading_${props.type}`}>\n                    <span>2</span> тур &nbsp;<em>(с 11 по 20 число каждого месяца)</em>\n                </h4>\n                <ul class='rules__tour-list colored-list'>\n                    <li><span>Очки, набранные в первом туре, не учитываются в рейтинге второго тура.</span></li>\n                    <li><span>Во втором туре участвуют Гости, занявшие первые 100 мест в рейтинге первого тура.</span></li>\n                    <li><span>Участники второго тура, занявшие первые 50 мест в рейтинге, т.е. набравшие максимальное количество очков по итогам тура, переходят в третий тур акции.</span></li>\n                </ul>\n            </div>\n            <div class='rules__tour'>\n                <h4 class={`rules__tour-heading heading heading_${props.type}`}>\n                    <span>3</span> тур &nbsp;<em>(с 21 числа календарного месяца до конца календарного месяца)</em>\n                </h4>\n                <ul class='rules__tour-list colored-list'>\n                    <li><span>Очки, набранные в первом и во втором туре рейтинга, не учитываются в третьем.</span></li>\n                    <li><span>В третьем туре участвуют Гости, занявшие первые 50 мест в рейтинге, т.е. набравшие максимальное количество очков по итогам второго тура.</span></li>\n                </ul>\n            </div>\n            <div class='rules__show-btn'><span onClick={props.onClickShowPopup}>узнать полные условия акции ></span></div>\n        </div>\n    )\n}\n\nexport default Rules;\n","\nmodule.exports = formatter;\nmodule.exports.default = formatter;\n\nfunction formatter(options) {\n  options = options || {};\n\n\n  // *********************************************************************************************\n  // Set defaults for negatives\n  // options.negative, options.negativeOut, options.separator retained for backward compatibility\n  // *********************************************************************************************\n\n  // type of negative; default left\n  options.negativeType = options.negativeType || (options.negative === 'R' ? 'right' : 'left')\n\n  // negative symbols '-' or '()'\n  if (typeof options.negativeLeftSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'left':\n        options.negativeLeftSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeLeftSymbol = '(';\n        break;\n      default:\n        options.negativeLeftSymbol = '';\n    }\n  }\n  if (typeof options.negativeRightSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'right':\n        options.negativeRightSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeRightSymbol = ')';\n        break;\n      default:\n        options.negativeRightSymbol = '';\n    }\n  }\n\n  // whether negative symbol should be inside/outside prefix and suffix\n\n  if (typeof options.negativeLeftOut !== \"boolean\") {\n    options.negativeLeftOut = (options.negativeOut === false ? false : true);\n  }\n  if (typeof options.negativeRightOut !== \"boolean\") {\n    options.negativeRightOut = (options.negativeOut === false ? false : true);\n  }\n\n  //prefix and suffix\n  options.prefix = options.prefix || '';\n  options.suffix = options.suffix || '';\n\n  //separators\n  if (typeof options.integerSeparator !== 'string') {\n    options.integerSeparator = (typeof options.separator === 'string' ? options.separator : ',');\n  }\n  options.decimalsSeparator = typeof options.decimalsSeparator === 'string' ? options.decimalsSeparator : '';\n  options.decimal = options.decimal || '.';\n\n  //padders\n  options.padLeft = options.padLeft || -1 //default no padding\n  options.padRight = options.padRight || -1 //default no padding\n\n  function format(number, overrideOptions) {\n    overrideOptions = overrideOptions || {};\n\n    if (number || number === 0) {\n      number = '' + number;//convert number to string if it isn't already\n    } else {\n      return '';\n    }\n\n    //identify a negative number and make it absolute\n    var output = [];\n    var negative = number.charAt(0) === '-';\n    number = number.replace(/^\\-/g, '');\n\n    //Prepare output with left hand negative and/or prefix\n    if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n    if (negative) {\n      output.push(options.negativeLeftSymbol);\n    }\n    if (options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n\n    //Format core number\n    number = number.split('.');\n    if (options.round != null) round(number, options.round);\n    if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n    if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n    if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n    if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n    if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n    output.push(number[0]);\n    if (number[1]) {\n      output.push(options.decimal);\n      output.push(number[1]);\n    }\n\n    //Prepare output with right hand negative and/or prefix\n    if (options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n    if (negative) {\n      output.push(options.negativeRightSymbol);\n    }\n    if (!options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n\n    //join output and return\n    return output.join('');\n  }\n\n  format.negative = options.negative;\n  format.negativeOut = options.negativeOut;\n  format.negativeType = options.negativeType;\n  format.negativeLeftOut = options.negativeLeftOut;\n  format.negativeLeftSymbol = options.negativeLeftSymbol;\n  format.negativeRightOut = options.negativeRightOut;\n  format.negativeRightSymbol = options.negativeRightSymbol;\n  format.prefix = options.prefix;\n  format.suffix = options.suffix;\n  format.separate = options.separate;\n  format.integerSeparator = options.integerSeparator;\n  format.decimalsSeparator = options.decimalsSeparator;\n  format.decimal = options.decimal;\n  format.padLeft = options.padLeft;\n  format.padRight = options.padRight;\n  format.truncate = options.truncate;\n  format.round = options.round;\n\n  function unformat(number, allowedSeparators) {\n    allowedSeparators = allowedSeparators || [];\n    if (options.allowedSeparators) {\n      options.allowedSeparators.forEach(function (s) { allowedSeparators.push (s); });\n    }\n    allowedSeparators.push(options.integerSeparator);\n    allowedSeparators.push(options.decimalsSeparator);\n    number = number.replace(options.prefix, '');\n    number = number.replace(options.suffix, '');\n    var newNumber = number;\n    do {\n      number = newNumber;\n      for (var i = 0; i < allowedSeparators.length; i++) {\n        newNumber = newNumber.replace(allowedSeparators[i], '');\n      }\n    } while (newNumber != number);\n    return number;\n  }\n  format.unformat = unformat;\n\n  function validate(number, allowedSeparators) {\n    number = unformat(number, allowedSeparators);\n    number = number.split(options.decimal);\n    if (number.length > 2) {\n      return false;\n    } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n      return false;\n    }  else if (options.round != null && number[1] && number[1].length > options.round) {\n      return false;\n    } else {\n      return /^-?\\d+\\.?\\d*$/.test(number);\n    }\n  }\n  return format;\n}\n\n//where x is already the integer part of the number\nfunction addIntegerSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is already the decimal part of the number\nfunction addDecimalSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d{3})(\\d+)/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is the integer part of the number\nfunction padLeft(x, padding) {\n  x = x + '';\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return buf.join('') + x;\n}\n\n//where x is the decimals part of the number\nfunction padRight(x, padding) {\n  if (x) {\n    x += '';\n  } else {\n    x = '';\n  }\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return x + buf.join('');\n}\nfunction truncate(x, length) {\n  if (x) {\n    x += '';\n  }\n  if (x && x.length > length) {\n    return x.substr(0, length);\n  } else {\n    return x;\n  }\n}\n\n//where number is an array with 0th item as integer string and 1st item as decimal string (no negatives)\nfunction round(number, places) {\n  if (number[1] && places >= 0 && number[1].length > places) {\n    //truncate to correct number of decimal places\n    var decim = number[1].slice(0, places);\n    //if next digit was >= 5 we need to round up\n    if (+(number[1].substr(places, 1)) >= 5) {\n      //But first count leading zeros as converting to a number will loose them\n      var leadingzeros = \"\";\n      while (decim.charAt(0)===\"0\") {\n        leadingzeros = leadingzeros + \"0\";\n        decim = decim.substr(1);\n      }\n      //Then we can change decim to a number and add 1 before replacing leading zeros\n      decim = (+decim + 1) + '';\n      decim = leadingzeros + decim;\n      if (decim.length > places) {\n        //adding one has made it longer\n        number[0] = (+number[0]+ +decim.charAt(0)) + ''; //add value of firstchar to the integer part\n        decim = decim.substring(1);   //ignore the 1st char at the beginning which is the carry to the integer part\n      }\n    }\n    number[1] = decim;\n  }\n  return number;\n}\n","import format from 'format-number';\n\nexport const formatNumber = (number) => number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\nexport const betFormatNumber = (number = '') => {\n    return format({\n        negativeLeftOut: false,\n        integerSeparator: ' ',\n        truncate: 2,\n        decimal: ',',\n        padRight: 2\n    })(number);\n};\n","import { h } from 'preact';\n\nimport { formatNumber } from './Helpers';\n\nconst Rates = ({ tourNumber, leaders, user = {}, type }) => {\n    const maxListCount = (tourNumber === 3) ? 50 : 100;\n    let formattedLeaders = leaders.slice(0, maxListCount).map((user, index) => ({\n        ...user,\n        name: `${user.name} ${user.lastNameFirstChar}`,\n        position: index + 1\n    }));\n    const dataGroups = Array.isArray(formattedLeaders) ? [formattedLeaders.slice(0, maxListCount / 2), formattedLeaders.slice(maxListCount / 2)] : [];\n    const userInfoPositionInDataGroups = (dataGroups[1] && dataGroups[1].length) ? 1 : 0;\n    const userPosition = user && user.position;\n    const userPositionOutOfTable = userPosition && (userPosition > maxListCount);\n    const markedPlacesCountInFinalTour = 10;\n    const finalTour = 3;\n\n    return (\n        <div class='rates'>\n            <div class={`rates__heading heading heading_${type}`}>\n                <div class='rates__heading-item-left'>\n                    <span>Позиция в рейтинге: <b>{userPosition || '-'}</b></span>\n                    <span>количество очков: <b>{user ? user.score : '-'}</b></span>\n                </div>\n                <div class='rates__heading-item-right'><span>{tourNumber}</span> тур</div>\n            </div>\n            <div class='rates__table-heading'>\n                <span>№</span>\n                <span>Имя Ф.</span>\n                <span>Клубная карта</span>\n                <span>Очки</span>\n            </div>\n            <div class='rates__table-wrapper'>\n                {dataGroups.map((group, groupIndex) => (\n                    <div class='rates__table' key={`key-${groupIndex}`}>\n                        {group.map((user, index) => (\n                            <div\n                                class='rates__table-item'\n                                key={`key-${index}`}\n                                data-pos={user.position}\n                                data-user={userPosition === user.position}\n                                data-active={(tourNumber === finalTour) && (user.position <= markedPlacesCountInFinalTour)}\n                            >\n                                <span>{user.position}</span>\n                                <span title={user.name}>{user.name}</span>\n                                <span>{user.cardNumbers}</span>\n                                <span>{formatNumber(user.pointsCount)}</span>\n                            </div>\n                        ))}\n                        {(user && userPositionOutOfTable && (groupIndex === userInfoPositionInDataGroups)) && (\n                            <div class='rates__table-item' data-user>\n                                <span>{(userPosition > 1000) ? '1000+' : userPosition}</span>\n                                <span>{user.name}</span>\n                                <span>{user.cardNumber}</span>\n                                <span>{user.score}</span>\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Rates;\n","import { h, Component } from 'preact';\n\nimport { formatNumber, betFormatNumber } from './Helpers';\n\nclass Bet extends Component {\n    constructor (props) {\n        super(props);\n\n        this.date = new Date(this.props.bet.betDate);\n        this.formattedDate = this.date.toLocaleDateString('ru-RU', { year: '2-digit', month: '2-digit', day: 'numeric' });\n        this.formattedTime = this.date.toLocaleString('ru-RU', { hour: 'numeric', minute: 'numeric' });\n        this.isNonOrdinar = this.props.bet.type.toLowerCase() !== 'single';\n        this.isOrdinar = this.props.bet.type.toLowerCase() === 'single';\n        this.isSystem = this.props.bet.type.toLowerCase() === 'combo';\n        this.isExpress = this.props.bet.type.toLowerCase() === 'express';\n        this.outcomesLength = this.props.bet.betEvents.length;\n\n        this.state = {\n            isOpen: false\n        }\n        this.onClickOpenBody = this.onClickOpenBody.bind(this);\n    }\n\n    get name () {\n        if (this.isOrdinar) {\n            return this.props.bet.betEvents[0].eventTitle;\n        } else if (this.isExpress) {\n            return `Экспресс из ${this.outcomesLength} событий`;\n        } else if (this.isSystem) {\n            return `Система`;\n        }\n    }\n\n    onClickOpenBody () {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    render ({ bet }, { isOpen }) {\n        const { points, betSumm, betId, betEvents, totalFactor } = bet;\n\n        return (\n            <div class='bet rates__table-item'>\n                <div class='bet__top-block'>\n                    <span>\n                        <time>{this.formattedTime}</time>\n                        <time>{this.formattedDate}</time>\n                    </span>\n                    <span>№{betId}</span>\n                    <span data-pad={this.isNonOrdinar}>\n                        {this.isNonOrdinar && <div class='bet__arrow' data-open={isOpen} onClick={this.onClickOpenBody} />}\n                        {this.name}\n                    </span>\n                    <span>{formatNumber(betSumm)}</span>\n                    <span>{betFormatNumber(totalFactor)}</span>\n                    <span>{formatNumber(points)}</span>\n                </div>\n                {this.isNonOrdinar && isOpen && (\n                    <div class='bet__body'>\n                        {betEvents.map((event, index) => <div key={`index-${index}`}>{event.eventTitle}</div>)}\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Bet;\n","import { h } from 'preact';\n\nimport Bet from './Bet';\n\nconst Line = ({ tourNumber, bets, user, type }) => (\n    <div class='line rates'>\n        <div class={`rates__heading heading heading_${type}`}>\n            <div class='rates__heading-item-left'>\n                <span>Позиция в рейтинге: <b>{user ? user.position : '-'}</b></span>\n                <span>количество очков: <b>{user ? user.score : '-'}</b></span>\n            </div>\n            <div class='rates__heading-item-right'><span>{tourNumber}</span> тур</div>\n        </div>\n        {!!bets.length && (\n            <div class='line__table-heading'>\n                <span>Время и дата</span>\n                <span>ID пари</span>\n                <span>Событие</span>\n                <span>Сумма пари</span>\n                <span>Коэфф.</span>\n                <span>Очки</span>\n            </div>\n        )}\n        <div class='rates__table line__table'>\n            {bets.map((bet, index) => <Bet key={`key-${index}`} bet={bet} />)}\n        </div>\n    </div>\n)\n\nexport default Line;\n","import { h } from 'preact'\n\nconst Loader = ({ children, ...props }) => (\n    <div class='loader'>\n        <svg width='200px' height='200px' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid' class='lds-eclipse' style='background: none;'>\n            <path ng-attr-d='{{config.pathCmd}}' ng-attr-fill='{{config.color}}' stroke='none' d='M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50' fill='#01160f' transform='rotate(137.836 50 51)'>\n                <animateTransform attributeName='transform' type='rotate' calcMode='linear' values='0 50 51;360 50 51' keyTimes='0;1' dur='1s' begin='0s' repeatCount='indefinite' />\n            </path>\n        </svg>\n    </div>\n)\n\nexport default Loader;\n","import { h } from 'preact'\n\nconst TextRules = () => (\n    <div class='text-rules'>\n        <p><strong>1. Условия участия в акции</strong></p>\n\n        <ol>\n            <ol>\n                <p>1.1. В акции могут участвовать только гости клубов (далее – Гости, Участники), являющиеся держателями Клубных карт ООО «ПМБК» (далее - БК «Лига Ставок») и клубов «Оскар Ярд».</p>\n                <p>1.2. Один Участник в рамках акции может заключить неограниченное количество пари.</p>\n                <p>1.3. Количество Участников акции не ограничено.</p>\n            </ol>\n        </ol>\n        <p><strong>2. Сроки проведения акции</strong></p>\n\n        <ol>\n            <ol>\n                <p>2.1. Акция «Лига Миллионеров» проводится в период с 01 октября 2022 года (00:00 МСК) по 31 октября 2022 года (23:59 МСК).</p>\n            </ol>\n        </ol>\n        <p><strong>3. Клубы, участвующие в акции</strong></p>\n\n        <ul>\n            <p>г. Астрахань, ул. Боевая, д. 1</p>\n            <p>г. Белгород, ул. Костюкова, д. 41</p>\n            <p>г. Брянск, ул. Ульянова, д. 58А, этаж 1 </p>\n            <p>г. Буйнакск, ул. Ленина, д. 7</p>\n            <p>г. Волгоград, ул. им. Землячки, зд. 52а</p>\n            <p>г. Волгоград, ул. Пролетарская, д. 45а</p>\n            <p>г. Воронеж, ул. Фр. Энгельса, д. 54</p>\n            <p>г. Дербент, ул. 345 Дагестанской Стрелковой Дивизии, д. 7</p>\n            <p>г. Дербент, ул. В. Ленина, д. 88/7</p>\n            <p>г. Дербент, ул. Таги-Заде, д. 45, лит. А</p>\n            <p>г. Иваново, Шереметевский пр-т, д.  83А</p>\n            <p>г. Избербаш, ул. Г.Азизова, д. 18\"б\"</p>\n            <p>г. Калининград, ул. Генерал-лейтенанта Озерова, д. 30</p>\n            <p>г. Калининград, ул. Литовский Вал, д. 25</p>\n            <p>г. Каспийск, ул. Кирова, д. 26 \"А\", лит. А</p>\n            <p>г. Каспийск, ул. Ленина, д. № 52г</p>\n            <p>г. Каспийск, ул. Орджоникидзе, д. 3, лит. А</p>\n            <p>г. Кизилюрт, ул. Малагусейнова, д. 17а, лит. А</p>\n            <p>г. Кизляр, ул. Победы, д. 85/1, лит. А</p>\n            <p>г. Кизляр, ул. Победы, д. 85/1, лит. А</p>\n            <p>г. Махачкала, Ленинский район, ул. Ирчи Казака, д. 114</p>\n            <p>г. Махачкала, пр-кт им. Али-Гаджи Акушинского, д. 110, лит. А</p>\n            <p>г. Махачкала, проспект А. Акушинского, д. 11 \"м\"</p>\n            <p>г. Махачкала, проспект Амет-хана Султана, д. 8 д</p>\n            <p>г. Махачкала, проспект Петра I, д. 16, корп. \"а\"</p>\n            <p>г. Махачкала, ул. Богатырева, д. 8</p>\n            <p>г. Махачкала, ул. Дахадаева, д. 17 \"а\"</p>\n            <p>г. Махачкала, ул. И.Казака, д. 20\"ж\", лит. А</p>\n            <p>г. Махачкала, ул. М.Гаджиева, № 73</p>\n            <p>г. Махачкала, ул. Магомедтагирова А.М., (быв. Казбекова), д. 55</p>\n            <p>г. Махачкала, ул. Ташкентская, д. 15</p>\n            <p>г. Нальчик, ул. Пушкина, д. 79</p>\n            <p>г. Нальчик, ул. Шогенова, д. 4</p>\n            <p>г. Нижний Новгород., ул. Фильченкова, д. 7</p>\n            <p>г. Новосибирск, ул. Ватутина, д. 31</p>\n            <p>г. Омск, ул. 22 Апреля, д. 35, корп. 2</p>\n            <p>г. Омск, ул. Красных Зорь, д. 4Б</p>\n            <p>г. Самара, Московское ш., д. 292А</p>\n            <p>г. Самара, ул. Аэродромная, д.10А</p>\n            <p>г. Самара, ул. Стара Загора, д. 216</p>\n            <p>г. Саратов, ул. им. Орджоникидзе Г.К., д. 12В</p>\n            <p>г. Саратов, ул. Московская, д. №97А</p>\n            <p>г. Сочи, п. Лазаревское, ул. Победы, д. 31</p>\n            <p>г. Сочи, ул. Ленина/Ульянова, д. 33/36</p>\n            <p>г. Тверь, ул. Коминтерна, д. 47/102</p>\n            <p>г. Тверь, ш. Петербургское, д. 37</p>\n            <p>г. Тула, пр-т Ленина, д. 131В</p>\n            <p>г. Тула, ул. Кирова, д. 25б</p>\n            <p>г. Уфа, ул. Рабкоров, д. 7</p>\n            <p>г. Хасавюрт, проезд Айнодина Гамзалаева, д 7 </p>\n            <p>г. Энгельс, ул. Тельмана, д. 23</p>\n            <p>г. Санкт-Петербург, ул. Бабушкина, д. 17, лит. А</p>\n        </ul>\n\n        <p><strong>4. Пари, участвующие в акции</strong></p>\n\n        <ol>\n            <ol>\n                <p>4.1. Пари, рассчитанные в период с 01 октября 2022 года (00:00 МСК) по 31 октября 2022 года (23:59 МСК) в клубах БК «Лига Ставок», перечисленных в пункте 3.</p>\n                <p>4.2. В акции участвуют пари рассчитанные в рамках сроков проведения каждого тура акции, указанных в настоящих Правилах.</p>\n                <p>4.3. Минимальный размер пари для участия в рейтинге «VIP» – 3 000 рублей.</p>\n                <p>4.4. Минимальный размер пари для участия в рейтинге «Начало» – 500 рублей.</p>\n                <p>4.5. Минимальный общий коэффициент пари – 1,50.</p>\n                <p>4.6. В акции участвуют только пари на спорт («доматч» и «лайв»).</p>\n                <p>4.7. В акции участвуют пари видов «одинар» и «экспресс».</p>\n                <p>4.8. К участию в акции допускаются пари, заключённые с помощью Клубной карты БК «Лига Ставок» или «Оскар Ярд» у кассиров или в терминалах самообслуживания.</p>\n                <p>4.9. Пари, заключённые с использованием фрибета(-ов), в акции не участвуют.</p>\n                <p>4.10. В акции не участвуют пари и события, рассчитанные со статусами «возврат» или «отмена». В случае перерасчёта ранее зачисленные по данным пари очки аннулируются.</p>\n                <p>4.11. Пари, рассчитанные с коэффициентом от 1 до 1,49, в акции не участвуют и ранее зачисленные по данным пари очки аннулируются.</p>\n            </ol>\n        </ol>\n        <ol>\n            <p><strong>5. Призовой фонд акции</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>5.1. Призовой фонд для Участников акции состоит из 1 400 000 рублей и фрибетов на сумму 2 100 000 рублей, каждый месяц из которых:</p>\n                <p>5.1.1 Для рейтинга «VIP» призовой фонд состоит из 1 100 000 рублей и фрибетов на сумму 900 000 рублей.</p>\n                <p>5.1.2 Для рейтинга «Начало» призовой фонд состоит из 300 000 рублей и фрибетов на сумму 1 200 000 рублей.</p>\n                <p>5.2. Призовой фонд распределяется между победителями акции ежемесячно.</p>\n            </ol>\n        </ol>\n        <ol>\n            <p><strong>6. Механика акции</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>6.1. После каждого заключённого пари, удовлетворяющего условиям акции, Участнику начисляются очки.</p>\n                <p>6.2. Формула расчета очков:</p>\n                <p>6.2.1 Для рейтинга «VIP»: количество очков = сумма пари / 3&nbsp;000 х общий коэффициент пари, где коэффициент округляется до целого числа в меньшую сторону и не может превышать 7,00, даже если общий коэффициент события более 7,00.</p>\n                <p>6.2.2 Для рейтинга «Начало»: количество очков = сумма пари / 500 х общий коэффициент пари, где коэффициент округляется до целого числа в меньшую сторону и не может превышать 7,00, даже если общий коэффициент события более 7,00.</p>\n                <p>6.3. Итоговое количество очков округляется до целого числа в меньшую сторону.</p>\n            </ol>\n        </ol>\n        <ul>\n            <p><i>Примеры расчёта количества очков рейтинг «VIP»</i></p>\n            <ul>\n                <p><i>Пари на сумму 7&nbsp;600 рублей с коэффициентом 1,80:</i></p>\n                <p><i>7&nbsp;600 / 3&nbsp;000 х 1,80 = 2 х 1 = 2</i></p>\n            </ul>\n            <ul>\n                <p><i>Пари на сумму&nbsp;9 500 рублей с коэффициентом 4,40:</i></p>\n                <p><i>9&nbsp;500 / 3&nbsp;000 х 4,40 = 3 х 4 = 12</i></p>\n            </ul>\n            <ul>\n                <p><i>Пари на сумму 3&nbsp;300 рублей с коэффициентом 12,10:</i></p>\n                <p><i>3&nbsp;300 / 3&nbsp;000 х 12,10 = 1 х 7 = 7</i></p>\n            </ul>\n        </ul>\n        <ul>\n            <p><i>Примеры расчёта количества очков рейтинг «Начало»</i></p>\n            <ul>\n                <p><i>Пари на сумму 500 рублей с коэффициентом 1,80:</i></p>\n                <p><i>500 / 500 х 1,80 = 1 х 1 = 1</i></p>\n            </ul>\n            <ul>\n                <p><i>Пари на сумму 1&nbsp;600 рублей с коэффициентом 4,40:</i></p>\n                <p><i>1&nbsp;600 / 500 х 4,40 = 3 х 4 = 12</i></p>\n            </ul>\n            <ul>\n                <p><i>Пари на сумму 3&nbsp;300 рублей с коэффициентом 12,10:</i></p>\n                <p><i>3&nbsp;300 / 500 х 12,10 = 6 х 7 = 42</i></p>\n            </ul>\n        </ul>\n        <ol>\n            <ol>\n                <p>6.4. Участниками рейтинга «VIP» являются игроки, которые на момент старта акции являются участниками программы лояльности «Привилегия»** и набравшие очки согласно п.6.2.1.</p>\n                <p>6.5. Участниками рейтинга «Начало» являются игроки, которые на момент старта акции не являются участниками программы лояльности «Привилегия»** и набравшие очки согласно п.6.2.2.</p>\n                <p>6.6. Участник акции не может изменить тип рейтинга, в котором участвует с момента начала акции, независимо от изменений статуса в программе лояльности «Привилегия».</p>\n                <p>6.7. Акция состоит из трёх туров, которые проходят ежемесячно.</p>\n                <p>6.8. Победители каждого тура в рейтингах определяются исходя из суммы очков, полученных Участником в туре. Победителем становится Участник, набравший большее количество очков среди всех участников акции в своем рейтинге.</p>\n                <p>6.9. Один участник акции может получить не более одного приза в каждом из трех туров, в период проведения акции, даже если участник акции занял призовые места более чем в одном регионе.</p>\n                <p>6.10. Если участник акции занял призовое место более чем в одном регионе, то зачисляется приз с наибольшим номиналом.</p>\n            </ol>\n        </ol>\n        <ol>\n            <p><strong>7. Первый тур</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>7.1. Первый тур проходит с 1 по 10 число каждого месяца.</p>\n                <p>7.2. В первом туре принимают участие Гости БК «Лига Ставок», заключающие пари в клубах БК «Лига Ставок», перечисленных в пункте 3. </p>\n                <p>7.3. Участники первого тура, занявшие первые 100 мест в своем рейтинге, т.е. набравшие максимальное количество очков по итогам тура, переходят во второй тур акции.</p>\n                <p>7.4. Участники первого тура, набравшие максимальное количество очков по итогам тура, получают призы:</p>\n            </ol>\n        </ol>\n        <p>Рейтинг «VIP»:</p>\n        <ul>\n            <p>1 место – 200 000 рублей фрибетами</p>\n            <p>2 место – 100 000 рублей фрибетами</p>\n            <p>3 место – 75 000 рублей фрибетами</p>\n            <p>3 место – 50 000 рублей фрибетами</p>\n            <p>3 место – 25 000 рублей фрибетами</p>\n        </ul>\n        <p>Рейтинг «Начало»:</p>\n        <ul>\n            <p>1 место – 50 000 рублей фрибетами</p>\n            <p>2 место – 40 000 рублей фрибетами</p>\n            <p>3 место – 30 000 рублей фрибетами</p>\n            <p>4 место – 25 000 рублей фрибетами</p>\n            <p>5 место – 20 000 рублей фрибетами</p>\n            <p>6 место – 15 000 рублей фрибетами</p>\n            <p>7 место – 15 000 рублей фрибетами</p>\n            <p>8 место – 10 000 рублей фрибетами</p>\n            <p>9 место – 10 000 рублей фрибетами</p>\n            <p>10 место – 10 000 рублей фрибетами</p>\n        </ul>\n        <ol>\n            <p><strong>2. Второй тур</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>8.1. Второй тур проходит с 11 по 20 число каждого месяца.</p>\n                <p>8.2. Очки, набранные в первом туре, не учитываются в рейтинге второго тура.</p>\n                <p>8.3. Во втором туре участвуют Участники акции, занявшие первые 100 мест в своем рейтинге первого тура.</p>\n                <p>8.4. Участники второго тура, занявшие первые 50 мест в своем рейтинге, т.е. набравшие максимальное количество очков по итогам тура, переходят в третий тур акции.</p>\n                <p>8.5. Участники второго тура, набравшие максимальное количество очков по итогам тура, получают призы:</p>\n            </ol>\n        </ol>\n        <p>Рейтинг «VIP»:</p>\n        <ul>\n            <p>1 место – 200 000 рублей фрибетами</p>\n            <p>2 место – 100 000 рублей фрибетами</p>\n            <p>3 место – 75 000 рублей фрибетами</p>\n            <p>3 место – 50 000 рублей фрибетами</p>\n            <p>3 место – 25 000 рублей фрибетами</p>\n        </ul>\n        <p>Рейтинг «Начало»:</p>\n        <ul>\n            <p>1 место – 50 000 рублей фрибетами</p>\n            <p>2 место – 40 000 рублей фрибетами</p>\n            <p>3 место – 30 000 рублей фрибетами</p>\n            <p>4 место – 25 000 рублей фрибетами</p>\n            <p>5 место – 20 000 рублей фрибетами</p>\n            <p>6 место – 15 000 рублей фрибетами</p>\n            <p>7 место – 15 000 рублей фрибетами</p>\n            <p>8 место – 10 000 рублей фрибетами</p>\n            <p>9 место – 10 000 рублей фрибетами</p>\n            <p>10 место – 10 000 рублей фрибетами</p>\n        </ul>\n        <ol>\n            <p><strong>9. Третий тур</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>9.1. Третий тур проходит с 21 числа календарного месяца до конца календарного месяца.</p>\n                <p>9.2. Очки, набранные в первом и во втором туре рейтинга, не учитываются в третьем.</p>\n                <p>9.3. В третьем туре участвуют Участники акции, занявшие первые 50 мест в своем рейтинге, т.е. набравшие максимальное количество очков по итогам второго тура.</p>\n                <p>9.4. Участники третьего тура, набравшие максимальное количество очков по итогам тура, получают призы:</p>\n            </ol>\n        </ol>\n        <p>Рейтинг «VIP»:</p>\n        <ul>\n            <p>1 место – 500 000 рублей</p>\n            <p>2 место – 250 000 рублей</p>\n            <p>3 место – 100 000 рублей</p>\n            <p>4 место – 75 000 рублей</p>\n            <p>5 место – 50 000 рублей</p>\n            <p>6 место – 50 000 рублей</p>\n            <p>7 место – 50 000 рублей</p>\n            <p>8 место – 50 000 рублей</p>\n            <p>9 место – 50 000 рублей</p>\n            <p>10 место – 50 000 рублей</p>\n        </ul>\n        <p>Рейтинг «Начало»:</p>\n        <ul>\n            <p>1 место – 300 000 рублей</p>\n            <p>2 место – 200 000 рублей фрибетами</p>\n            <p>3 место – 125 000 рублей фрибетами</p>\n            <p>4 место – 75 000 рублей фрибетами</p>\n            <p>5 место – 50 000 рублей фрибетами</p>\n            <p>6 место – 40 000 рублей фрибетами</p>\n            <p>7 место – 30 000 рублей фрибетами</p>\n            <p>8 место – 25 000 рублей фрибетами</p>\n            <p>9 место – 25 000 рублей фрибетами</p>\n            <p>10 место – 25 000 рублей фрибетами</p>\n            <p>11 место – 20 000 рублей фрибетами</p>\n            <p>12 место – 20 000 рублей фрибетами</p>\n            <p>13 место – 15 000 рублей фрибетами</p>\n            <p>14 место – 15 000 рублей фрибетами</p>\n            <p>15 место – 15 000 рублей фрибетами</p>\n            <p>16 место – 15 000 рублей фрибетами</p>\n            <p>17 место – 15 000 рублей фрибетами</p>\n            <p>18 место – 15 000 рублей фрибетами</p>\n            <p>19 место – 15 000 рублей фрибетами</p>\n            <p>20 место – 10 000 рублей фрибетами</p>\n        </ul>\n        <ol>\n            <p><strong>10. Информирование о порядке проведения акции</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>10.1. Информирование всех заинтересованных лиц о порядке и сроках проведения акции, прекращении, изменении или временном приостановлении проведения акции, а также о победителях в рамках каждого тура, сроках и месте проведения дополнительного розыгрыша, по усмотрению организатора, может быть произведено любыми из следующих способов:</p>\n            </ol>\n        </ol>\n        <p>- путём размещения рекламных материалов с информацией об условиях акции в клубах, на веб-сайте, других интернет-сайтах и т. п.;</p>\n        <p>- путём организации горячей линии по телефону, указанному на Клубных картах БК «Лига Ставок»;</p>\n        <p>- иными способами по усмотрению организатора.</p>\n        <ol>\n            <ol>\n                <p>10.2. Организатор вправе по своему усмотрению определять перечень способов информирования, используемых в рамках проведения акции, за исключением случаев, предусмотренных настоящими Правилами. </p>\n            </ol>\n        </ol>\n        <ol>\n            <p><strong>11. Порядок вручения денежных призов</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>11.1. Денежные призы, предусмотренные в рамках настоящих правил, зачисляются на Клубную карту Участника акции в течение трёх рабочих дней с момента определения победителей тура.</p>\n            </ol>\n        </ol>\n        <ol>\n            <p><strong>12. Заключительные и переходные положения</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>12.1. Акция «Лига Миллионеров», далее Акция, проводится в рамках маркетинговой активности, направленной на привлечение внимания, формирование и поддержание интереса к бренду «Лига ставок», обладателем прав на который является Общество с ограниченной ответственностью «Первая международная букмекерская компания».</p>\n                <p>12.2. Акция не является лотереей, носит исключительно маркетинговый характер, не требует внесение платы за участие. Участие в Акции является добровольным.</p>\n                <p>12.3. Организация и проведение Акции утверждаются на основании действующего законодательства Российской Федерации, а также настоящих правил и условий участия в Акции, далее Правила.</p>\n                <p>12.4. Участие в Акции лиц, не достигших возраста 18 лет, не допускается.</p>\n                <p>12.5. Не могут принимать участие в Акции сотрудники организатора Акции и (или) аффилированных компаний либо компаний, иным образом имеющих отношение к организации, подготовке и проведению Акции, а также члены их семей.</p>\n                <p>12.6. Приняв участие в Акции, Участники соглашаются с тем, что добровольно предоставленная ими для целей проведения Акции информация (в том числе их персональные данные) может обрабатываться как организатором акции, а также уполномоченными им лицами, в том числе с применением автоматизированных средств обработки данных в целях, указанных федеральным законом № 152-ФЗ «О защите персональных данных».</p>\n                <p>12.7. Совершая действия по участию в Акции, Участник тем самым подтверждает ознакомление и согласие с настоящими Правилами, в том числе подтверждает своё согласие на бесплатное использование предоставленной информации и фотографий организатору Акции с маркетинговой и/или какой-либо другой целью, методами, которые не нарушают действующее законодательство Российской Федерации (в том числе путём передачи третьим лицам), в частности на бесплатное использование его имени, фамилии, фотографии, интервью или других материалов о нём с рекламной/маркетинговой целью, в том числе право публикации (в том числе его фамилии, имени, отчества, города проживания и фотографии) в средствах массовой информации, каких-либо печатных, аудио- и видеоматериалах, интервью со СМИ, в случае получения приза, а также для отправки информации, сообщений (в том числе рекламного характера), без каких-либо ограничений по территории, времени и способу использования, и такое использование никоим образом не возмещается организатором Акции и/или каким-либо третьим лицом.</p>\n                <p>12.8. Организатор Акции не осуществляет доставку приза в какое-либо место.</p>\n                <p>12.9. В случае обнаружения факта нарушения Участником Акции настоящих Правил, а также Правил приема ставок организатора он исключается из участия в Акции, а заключённые им пари для определения победителя Акции аннулируются.</p>\n                <p>12.10. В спорных ситуациях решение уполномоченных лиц организатора Акции является окончательным. Организатор Акции имеет право в любой момент времени отменить Акцию и все результаты по ней, либо досрочно объявить результаты Акции в соответствии с механикой на дату окончания Акции, определенную решением Организатора.</p>\n                <p>12.11. В случае, если пари, рассчитанные с общим коэффициентом менее 1,50 в результате «отмены» или «возврата», влияют на итоговый рейтинг участника акции, букмекерская компания оставляет за собой право аннулировать очки, полученные с помощью таких пари в любой момент проведения акции, но не позднее даты подведения итогов по акции.</p>\n                <p>12.12. При технических сбоях в деятельности организатора Акции, последний оставляет за собой право пересчитать результат Участника Акции.</p>\n                <p>12.13. Организатор Акции не несет ответственность за технические сбои операторов связи (телефонной и интернет), непосредственно обслуживающих Участника Акции и организатора Акции.</p>\n                <p>12.14. Настоящие Правила размещены на сайте www.ligastavok.ru и могут быть изменены и/или дополнены в любое время проведения Акции или в любое другое время. Надлежащим уведомлением об изменении и/или дополнении Правил является информация, размещенная на сайте.</p>\n            </ol>\n        </ol>\n        <ol>\n            <p><strong>13. Сведения об организаторе Акции</strong></p>\n        </ol>\n        <ol>\n            <ol>\n                <p>13.1. Организатором Акции является Общество с ограниченной ответственностью «Первая международная букмекерская компания» (ООО «ПМБК»). Место нахождения: 125196, город Москва, ул. Лесная, д. 3, этаж 3, пом. II, ком. 29; ОГРН: 1087746968759; ИНН: 7729607406. Сайт организатора Акции: www.ligastavok.ru</p>\n            </ol>\n        </ol>\n        <p>* Фрибет – предоставляемый компанией бонус, которым Участник Акции может воспользоваться для заключения пари с организатором Акции. В случае если пари закончилось победой Участника Акции, из суммы, получаемой в результате пари («выигрыш»), вычитается сумма фрибета.</p>\n        <p>** Ознакомиться с условиями программы лояльности можно на сайте ligastavok.ru по адресу ligastavok.ru/promo/priviliegiya-cashback</p>\n    </div>\n)\n\nexport default TextRules;\n","import { h } from 'preact'\n\nimport TextRules from './TextRules';\n\nconst Popup = ({ children, ...props }) => {\n    const detectOutWindowClick = (e) => {\n        const target = e.target;\n        const isInnerClick = target.classList.contains('popup') || (target.closest('.popup') && target.closest('.popup').classList.contains('popup'));\n\n        if (isInnerClick) {\n            return;\n        }\n\n        props.onClose();\n    }\n\n    return (\n        <div class='popup__layer' onClick={detectOutWindowClick}>\n            <div class='popup'>\n                <div class='popup__close' onClick={props.onClose} />\n                <h4 class='popup__header'>правила и условия участия в акции «Лига миллионеров»</h4>\n                <div class='popup__content custom-scrollbar'>\n                    <TextRules />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup;\n","class Transport {\n    constructor (url, authToken) {\n        this.baseURL = url;\n        this.authToken = authToken\n        // eslint-disable-next-line no-undef\n        this.headers = new Headers({\n            'Content-Type': 'application/json'\n        });\n        this.params = {\n            headers: this.headers,\n            mode: 'cors'\n        }\n    }\n\n    setHeader (key, value) {\n        this.params.headers.set(key, value);\n    }\n\n    async request ({ method = 'GET', path, params }) {\n        if (!path) {\n            console.error(`[MARKA landing] http error: Incorrect request params, path is ${path}`)\n            return;\n        }\n\n        const url = path.startsWith('http') ? path : `${this.baseURL}${path}`;\n        const config = params || this.params;\n\n        config.method = method;\n\n        try {\n            // eslint-disable-next-line no-undef\n            const response = await fetch(url, config);\n\n            if (response.ok) {\n                const json = await response.json();\n\n                return {\n                    result: json,\n                    error: null\n                };\n            } else {\n                return {\n                    result: null,\n                    error: `statusCode: ${response.status}, statusText: ${response.statusText}`\n                };\n            }\n        } catch (error) {\n            return {\n                result: null,\n                error\n            };\n        }\n    }\n\n    requestRatings (campaignId) {\n        return this.request({ path: `ratings/campaign/${campaignId}` });\n    }\n\n    requestLeaders (ratingId) {\n        return this.request({ path: `ratings/${ratingId}/leaders` })\n    }\n\n    requestCurrentUser (ratingId) {\n        return this.request({ path: `ratings/${ratingId}/client` })\n    }\n\n    setAuthToken (authToken) {\n        this.setHeader('Authorization', `Bearer ${authToken}`);\n\n        this.authToken = authToken;\n    }\n\n    requestClientBets (ratingId) {\n        return this.request({ path: `ratings/${ratingId}/client/full` })\n    }\n\n    requestActions (externalId, channelTypeId) {\n        const params = {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                'Content-Type'               : 'application/json',\n                'X-API-BranchId'             : externalId,\n                Accept                       : 'application/json',\n                mode                         : 'no-cors'\n            }\n        };\n\n        return this.request({ path: `content/channelType/${channelTypeId}?state=Started&take=2`, params })\n    }\n\n    _parseJwt (token) {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n        return JSON.parse(jsonPayload);\n    };\n\n    _getClientNumberFromToken (token) {\n        try {\n            const decoded = this._parseJwt(token);\n            const sub = JSON.parse(decoded.sub);\n\n            return String(sub.number);\n        } catch (error) {\n            this.logger.error(error);\n        }\n\n        return '';\n    }\n\n    _uuidv4 () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0; const v = c === 'x' ? r : (r & 0x3 | 0x8);\n\n            return v.toString(16);\n        })\n    }\n\n    async getUserInfo (token) {\n        return await fetch('https://api.ligastavok.ru/rest/auth/v6/getUserInfo', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'x-api-cred': `|${token}`,\n                'x-req-id': this._uuidv4(),\n                'x-user': this._getClientNumberFromToken(token),\n                'x-application-name': 'desktop'\n            }\n        })\n    }\n}\n\nexport default Transport;\n","import { h, Component } from 'preact'\n\nimport Rules from './Rules';\nimport Rates from './Rates';\nimport Line from './Line';\nimport Loader from './Loader';\nimport Popup from './Popup';\n\nimport Transport from '../transport';\n\nimport { formatNumber } from './Helpers';\n\nclass App extends Component {\n    constructor (props) {\n        super();\n\n        this.markaURL = props.markaURL;\n        this.externalId = props.externalId;\n        this.channelTypeId = props.channelTypeId;\n        this.userCard = props.userCard;\n        this.currentRating = null;\n        this.prevRating = null;\n        this.transport = null;\n        this.authToken = props.authToken;\n        this.isRequestUser = (props.type === 'start' && !props.isVip) || (props.type === 'vip' && props.isVip);\n\n        this.state = {\n            isSettingsReceived: props.isSettingsReceived,\n            isAuth: props.isAuth,\n            activeTab: 'rules',\n            isPopupOpen: false,\n            tour: 1,\n            leaders: [],\n            bets: [],\n            user: null,\n            type: props.type,\n            isVIP: props.isVIP,\n            campaignId: props.campaignId\n        };\n\n        this.sendMessageToParent = this.sendMessageToParent.bind(this);\n        this.onSwitchTab = this.onSwitchTab.bind(this);\n        this.onClickShowPopup = this.onClickShowPopup.bind(this);\n    }\n\n    onClickShowPopup () {\n        this.setState({ isPopupOpen: !this.state.isPopupOpen })\n    }\n\n    onSwitchTab (e) {\n        const name = e.target.dataset.name;\n\n        if (!name || (name === this.state.activeTab)) {\n            return;\n        }\n\n        this.setState({ activeTab: name });\n        this.updateActionData();\n    }\n\n    async getCurrentRating () {\n        const { result, error } = await this.transport.requestRatings(this.state.campaignId);\n\n        if (error) {\n            throw new Error(error);\n        }\n\n        const ratingIndex = Array.isArray(result) && result.findIndex((item) => item.status === 'Current');\n        const rating = (ratingIndex !== -1) && result[ratingIndex];\n\n        if (rating) {\n            const tour = ratingIndex + 1;\n\n            if (tour !== 1) {\n                this.prevRating = result[ratingIndex - 1].id;\n\n                if (!this.prevRating) {\n                    throw new Error('[MARKA landing] prev rating not found');\n                }\n            }\n\n            this.currentRating = result[ratingIndex].id;\n            this.setState({ tour });\n        }\n    }\n\n    async getLeaders () {\n        const { result, error } = await this.transport.requestLeaders(this.currentRating);\n        let leaders = result;\n\n        if (error) {\n            throw new Error(error);\n        }\n\n        if (this.state.tour !== 1 && this.prevRating) {\n            const { result: prevLeaders, error: prevError } = await this.transport.requestLeaders(this.prevRating);\n\n            if (prevError) {\n                throw new Error(prevError);\n            }\n            leaders = this.concatPrevAndCurrentLeaders(leaders, prevLeaders)\n        }\n\n        this.setState({ leaders });\n    }\n\n    concatPrevAndCurrentLeaders (currentLeaders, prevLeaders) {\n        const prevLeadersWithResetScores = prevLeaders.map((prevLeader) => {\n            const isContainsInCurrentLeaders = currentLeaders.find((leader) => leader.clientNumber === prevLeader.clientNumber);\n\n            if (isContainsInCurrentLeaders) {\n                return null;\n            }\n\n            return {\n                ...prevLeader,\n                pointsCount: 0\n            }\n        }).filter((item) => item);\n\n        return [...currentLeaders, ...prevLeadersWithResetScores];\n    }\n\n    async updateActionData () {\n        if (!(this.transport && this.state.campaignId)) {\n            throw Error(`Can't update ratings, transport: ${this.transport}, campaignId: ${this.state.campaignId}`)\n        }\n\n        await this.getCurrentRating();\n\n        if (!this.currentRating) {\n            console.error('[MARKA landing] current rating not found');\n            this.sendMessageToParent({ message: 'marka-iframe:redirect:home' });\n        } else {\n            await this.getLeaders();\n        }\n    }\n\n    async getBets () {\n        if (!(this.userCard && this.transport)) {\n            throw new Error(`[MARKA landing] Can't get auth token, userCard is ${this.userCard}`);\n        }\n\n        if (!this.currentRating || !this.authToken) {\n            throw new Error(`[MARKA landing] error: currentRating is ${this.currentRating}, token is ${this.authToken}`)\n        }\n\n        this.transport.setAuthToken(this.authToken);\n        const { result: bets, error } = await this.transport.requestClientBets(this.currentRating);\n\n        if (error) {\n            throw new Error(error);\n        }\n\n        this.setState({ bets })\n    }\n\n    async getUser () {\n        if (!this.currentRating || !this.authToken) {\n            throw new Error(`[MARKA landing] error: currentRating is ${this.currentRating}, token is ${this.authToken}`)\n        }\n\n        const { result: user, error } = await this.transport.requestCurrentUser(this.currentRating);\n\n        if (error) {\n            throw new Error(error);\n        }\n\n        const { points, position, name, lastNameFirstChar, cardNumbers, clientNumbers } = user;\n        const formattedUser = {\n            position,\n            name: `${name} ${lastNameFirstChar}`,\n            score: formatNumber(points),\n            cardNumber: cardNumbers,\n            clientNumbers\n        }\n\n        this.setState({ user: formattedUser })\n    }\n\n    sendMessageToParent (data) {\n        const message = JSON.stringify(data); // отправляем только объекты через postMEssage!!!\n\n        window.parent.postMessage(message, '*')\n    }\n\n    async componentWillReceiveProps (nextProps) {\n        this.markaURL = nextProps.markaURL;\n        this.externalId = nextProps.externalId;\n        this.channelTypeId = nextProps.channelTypeId;\n        this.userCard = nextProps.userCard;\n        this.authToken = nextProps.authToken;\n\n        this.setState({\n            isSettingsReceived: nextProps.isSettingsReceived,\n            isAuth: nextProps.isAuth,\n            type: nextProps.type,\n            campaignId: nextProps.campaignId\n        });\n\n        if (nextProps.isAuth && ((nextProps.type === 'start' && !nextProps.isVip) || (nextProps.type === 'vip' && nextProps.isVip))) {\n            await this.getBets();\n            await this.getUser();\n        }\n    }\n\n    async componentDidMount () {\n        this.transport = new Transport(this.markaURL, this.authToken);\n\n        await this.updateActionData();\n\n        if (this.userCard && this.isRequestUser) {\n            await this.getBets();\n            await this.getUser();\n        }\n    }\n\n    render (props, { isAuth, type, isSettingsReceived, isPopupOpen, tour, leaders, bets }) {\n        const headerClass = `header header_${type}`;\n\n        return (\n            <div class='container' id='container'>\n                <div class='button-back' onClick={props.onClick}>\n                    <svg width='16' height='16' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'>\n                        <path d='M18 9H5.83L11.42 3.41L10 2L2 10L10 18L11.41 16.59L5.83 11H18V9Z' fill='white' />\n                    </svg>\n                    <span>Лига Миллионеров</span>\n                </div>\n                <div class='sticky'>\n                    <div class={headerClass} />\n                    <ul class='menu' onClick={this.onSwitchTab}>\n                        <li class='menu__item' data-active={this.state.activeTab === 'rules'} data-name='rules'>Условия акции</li>\n                        <li class='menu__item' data-active={this.state.activeTab === 'rates'} data-name='rates'>Рейтинг участников</li>\n                        {isAuth && !!bets.length && <li class='menu__item' data-active={this.state.activeTab === 'line'} data-name='line'>Квалификационные пари</li>}\n                    </ul>\n                </div>\n                {isSettingsReceived\n                    ? (\n                        <div class='content'>\n                            {this.state.activeTab === 'rules' && <Rules type={type} onClickShowPopup={this.onClickShowPopup} />}\n                            {this.state.activeTab === 'rates' && <Rates type={type} tourNumber={tour} leaders={leaders} user={this.state.user} />}\n                            {this.state.activeTab === 'line' && isAuth && <Line type={type} isAuth={isAuth} user={this.state.user} tourNumber={tour} bets={bets} />}\n                        </div>\n                    ) : <Loader />\n                }\n                {isPopupOpen && <Popup onClose={this.onClickShowPopup} />}\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import { h, Component } from 'preact'\n\nimport Main from './Main';\nimport Transport from '../transport';\nimport NavStart from '../../img/nav-start.jpg';\nimport NavVIP from '../../img/nav-vip.jpg';\n\nclass App extends Component {\n    constructor () {\n        super();\n\n        this.userCard = null;\n        this.transport = null;\n        this.authToken = null;\n        this.markaURL = null;\n        this.userCard = null;\n        this.externalId = null;\n        this.channelTypeId = null;\n        this.campaignResId = null;\n        this.campaignResIdVIP = null;\n\n        this.state = {\n            type: null,\n            isVIP: false,\n            campaignId: null,\n            isAuth: true,\n            isSettingsReceived: false\n        };\n\n        this.onParentMessage = this.onParentMessage.bind(this);\n        this.onClickBack = this.onClickBack.bind(this);\n    }\n\n    set (key, value) {\n        this[key] = value;\n    }\n\n    setSettings (data) {\n        const { message, ...settings } = data;\n\n        Object.keys(settings).forEach((key) => {\n            this.set(key, settings[key]);\n        })\n    }\n\n    async setInitialSettings (data) {\n        this.setSettings(data);\n        this.transport = new Transport(this.markaURL, this.authToken);\n        this.setState({\n            isAuth: !!this.userCard,\n            isSettingsReceived: true\n        });\n\n        await this.getActions();\n\n        if (this.userCard) {\n            await this.getUserInfo();\n        }\n    }\n\n    async getUserInfo () {\n        try {\n            const response = await this.transport.getUserInfo(this.authToken);\n            const data = await response.json();\n            const vipStatus = data.result && data.result.vipStatus;\n\n            this.setState({\n                isVIP: vipStatus\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async getActions () {\n        const { result, error } = await this.transport.requestActions(this.externalId, this.channelTypeId);\n\n        if (error) {\n            throw new Error(error);\n        }\n\n        const { campaignsMeta } = result || [];\n\n        if (campaignsMeta.length < 2) {\n            throw new Error('Недостаточное количество начавшихся акций, меньше чем 2');\n        }\n\n        const { campaignId } = campaignsMeta[0];\n        const { campaignId: campaignIdVIP } = campaignsMeta[1];\n\n        this.campaignResId = campaignId;\n        this.campaignResIdVIP = campaignIdVIP;\n    }\n\n    async onParentMessage (event) {\n        if (!event.data || (event.origin === window.location.origin)) {\n            return;\n        }\n\n        try {\n            const data = JSON.parse(event.data);\n\n            switch (data.message) {\n            case 'terminal:init': {\n                this.setInitialSettings(data);\n                break;\n            }\n            case 'terminal:auth:off': {\n                this.setSettings(data);\n                this.setState({ isAuth: false });\n                break;\n            }\n            case 'terminal:auth:on': {\n                this.setSettings(data);\n                this.setState({ isAuth: true });\n\n                await this.getUserInfo();\n            }\n            }\n        } catch (error) {\n            console.error(error.message);\n        }\n    }\n\n    onClickChangeType (type) {\n        if (type === 'start' && this.campaignResId) {\n            this.setState({\n                type,\n                campaignId: this.campaignResId\n            });\n        }\n\n        if (type === 'vip' && this.campaignResIdVIP) {\n            this.setState({\n                type,\n                campaignId: this.campaignResIdVIP\n            });\n        }\n    }\n\n    onClickBack () {\n        this.setState({\n            type: null\n        })\n    }\n\n    componentDidMount () {\n        window.addEventListener('message', this.onParentMessage);\n    }\n\n    componentWillUnmount () {\n        window.removeEventListener('message', this.onParentMessage);\n    }\n\n    render (props, { type, isVIP, campaignId, isSettingsReceived, isAuth }) {\n        return (\n            <div class='app'>\n                {type ? (\n                    <Main\n                        type={type}\n                        isVIP={isVIP}\n                        onClick={this.onClickBack}\n                        campaignId={campaignId}\n                        markaURL={this.markaURL}\n                        externalId={this.externalId}\n                        channelTypeId={this.channelTypeId}\n                        userCard={this.userCard}\n                        authToken={this.authToken}\n                        isAuth={isAuth}\n                        isSettingsReceived={isSettingsReceived}\n                    />\n                ) : (\n                    <div class='app__nav'>\n                        <div class='app__nav-header'>Выберите свою Лигу</div>\n                        <div class='app__nav-block'>\n                            <div class='app__nav-img-left' onClick={() => this.onClickChangeType('start')}>\n                                <img src={NavStart} />\n                            </div>\n                            <div class='app__nav-img-right' onClick={() => this.onClickChangeType('vip')}>\n                                <img src={NavVIP} />\n                            </div>\n                        </div>\n                        <div class='app__nav-bottom' />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { h, render } from 'preact';\n\n// eslint-disable-next-line no-unused-vars\nimport style from '../css/styles.pcss';\n\nimport App from './components/App';\n\nconst node = document.getElementById('app');\n\nrender(<App />, node, node.lastChild);\n"]}